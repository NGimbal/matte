{"version":3,"sources":["Components/DataTable/DataTable.js","Components/ImportCSV/ImportCSV.js","Components/Drawer/Drawer.js","Components/TableControls/TableControls.js","Components/Collaborators/Collaborators.js","Components/AppBar/AppBar.js","App.js","reportWebVitals.js","index.js"],"names":["SimpleEditableCell","initialValue","value","set","column","row","awareProvider","collabs","React","useState","val","setVal","editor","setEditor","useEffect","editors","filter","cursor","onChange","e","target","setLocalStateField","onBlur","style","border","color","boxSizing","EditableRow","useYMap","original","data","getRowProps","cells","map","cell","getCellProps","background","isGrouped","isAggregated","isPlaceholder","getToggleRowExpandedProps","isExpanded","render","subRows","length","id","GroupedRow","DataTable","columns","useTable","useGroupBy","useExpanded","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","groupBy","expanded","headerGroup","getHeaderGroupProps","headers","getHeaderProps","canGroupBy","getGroupByToggleProps","i","canExpand","values","toJSON","readFile","file","a","reader","FileReader","Promise","resolve","reject","onload","event","result","onerror","error","readAsText","ImportCSV","props","fileContents","useAsyncCallback","strData","header","objPattern","RegExp","arrMatches","arrData","exec","push","replace","hData","shift","reduce","acc","key","csvStringToArray","schema","index","arr","Y","v","yInsert","htmlFor","type","input","files","execute","Drawer","orgs","projects","height","width","position","left","TableControls","Collaborators","display","alignItems","justifyContent","fontWeight","name","friend","backgroundColor","boxShadow","margin","borderRadius","match","join","toUpperCase","AppBar","top","padding","Styles","styled","div","blankRow","format","divNum","divName","secNum","secName","keyNum","keyDesc","interior","exterior","function","source","contact","sku","finish","remarks","randomName","names1","names2","Math","floor","random","connectDoc","doc","console","log","guid","wsProvider","WebsocketProvider","on","status","awareness","setLocalState","chroma","hex","clientID","App","ydoc","useYDoc","useYArray","getArray","yPush","insert","initAwareness","setCollabs","setAwareness","Array","from","getStates","useAwareness","useMemo","Header","accessor","className","flexDirection","onClick","k","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9718ddce.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTable, useGroupBy, useExpanded, useRowState } from 'react-table'\nimport { useYDoc, useYArray, useYMap } from 'zustand-yjs'\n\nconst SimpleEditableCell = ({\n  value: initialValue,\n  set: set,\n  column,\n  row,\n  awareProvider,\n  collabs,\n}) => {\n\n  const [val, setVal] = React.useState(initialValue)\n  const [editor, setEditor] = React.useState(null)\n  \n  useEffect(() => {\n    setVal(initialValue)\n  },[initialValue])\n\n  useEffect(() => {\n    let editors = [null]\n    if(typeof collabs !== 'undefined') {\n      editors = collabs.filter(val => (val.cursor && val.cursor.row === row && val.cursor.column === column))\n    }\n    setEditor(editors[0])\n  },[collabs])\n\n  // useEffect(() => {\n  //   console.log(editor)\n  // },[editor])\n\n  const onChange = e => {\n    setVal(`${e.target.value}`)\n    if(typeof awareProvider !== 'undefined'){\n      awareProvider.setLocalStateField('cursor', {\n        column: column,\n        row: row\n      })\n    }\n  }\n\n  const onBlur = e => {\n    set(column, `${e.target.value}`)\n  }\n\n  return (\n    <>\n      { \n        editor ? \n        <input style={{border:'3px solid' + editor.color, boxSizing:'border-box'}} value={val} onChange={onChange} onBlur={onBlur}/> :\n        <input value={val} onChange={onChange} onBlur={onBlur}/>\n      }\n    </>\n  )\n}\n\nconst EditableRow = ({\n  row: row,\n  awareProvider,\n  collabs,\n}) => {\n  \n  // Keep and update the state of the cell\n  const { set, data } = useYMap(row.original)\n  \n  return (\n    <tr {...row.getRowProps()}>\n      {row.cells.map(cell => {\n        return (\n          <td \n            {...cell.getCellProps()}\n            style={{\n              background: cell.isGrouped\n                ? '#0aff0082' // green\n                : cell.isAggregated\n                ? '#ffa50078' // orange\n                : cell.isPlaceholder\n                ? '#ff000042'\n                : 'default'\n              }}\n            >\n              {cell.isGrouped ? (\n                <>\n                  <span {...row.getToggleRowExpandedProps()}>\n                    {row.isExpanded ? '👇' : '👉'}\n                  </span>{' '}\n                  {cell.render('Cell')} ({row.subRows.length})\n                </>\n                ) : cell.isAggregated ? (\n                  cell.render('Aggregated')\n                ) : cell.isPlaceholder? null : (\n                  cell.render(SimpleEditableCell, {value:cell.value, column: cell.column.id, row:cell.row.id, set: set, awareProvider, collabs})\n                )\n              }\n          </td>\n        )\n      })}\n    </tr>  \n  )\n}\n\nconst GroupedRow = ({\n  row: row,\n}) => {\n\n  return (\n    <tr {...row.getRowProps()}>\n      {row.cells.map(cell => {\n        return (\n          <td \n            {...cell.getCellProps()}\n            style={{\n              background: cell.isGrouped\n                ? '#0aff0082' // green\n                : cell.isAggregated\n                ? '#ffa50078' // orange\n                : cell.isPlaceholder\n                ? '#ff000042'\n                : 'white'\n              }}\n            >\n              {cell.isGrouped ? (\n                <>\n                  <span {...row.getToggleRowExpandedProps()}>\n                    {row.isExpanded ? '👇' : '👉'}\n                  </span>{' '}\n                  {cell.render('Cell')} ({row.subRows.length})\n                </>\n                ) : cell.isAggregated ? (\n                  cell.render('Aggregated')\n                ) : cell.isPlaceholder ? null : (\n                  cell.render('Cell') // this shouldn't happen?\n                )\n              }\n          </td>\n        )\n      })}\n    </tr>  \n  )\n}\n\nfunction DataTable({ columns, data, awareProvider, collabs }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: { groupBy, expanded },\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGroupBy,\n    useExpanded,\n  )\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>\n                {column.canGroupBy ? (\n                  <span {...column.getGroupByToggleProps()}>\n                    {column.isGrouped ? '🤌' : '🖐'}\n                  </span>\n                ) : null}\n                {column.render('Header')}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n\n          // is there a better place to do this?\n          if(!row.canExpand){\n            row.values = row.original.toJSON()\n          }\n\n          prepareRow(row)\n\n          return (            \n            <>\n            {row.canExpand ? <GroupedRow row={row}/> : <EditableRow row={row} awareProvider={awareProvider} collabs={collabs}/>}\n            </>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nexport default DataTable\n","import React, { useEffect, useMemo } from 'react';\nimport { useAsyncCallback } from 'react-async-hook';\n\nimport * as Y from 'yjs'\n\n// https://gist.github.com/plbowers/7560ae793613ee839151624182133159\nconst csvStringToArray = (strData, header=true) =>\n{\n    //const objPattern = new RegExp((\"(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|([^\\\\,\\\\r\\\\n]*))\"),\"gi\");\n    const objPattern = new RegExp((\"(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\\\"((?:\\\\\\\\.|\\\"\\\"|[^\\\\\\\\\\\"])*)\\\"|([^\\\\,\\\"\\\\r\\\\n]*))\"),\"gi\");\n    let arrMatches = null, arrData = [[]];\n    while (arrMatches = objPattern.exec(strData)){\n        if (arrMatches[1].length && arrMatches[1] !== \",\") arrData.push([]);\n        arrData[arrData.length - 1].push(arrMatches[2] ? \n            arrMatches[2].replace(new RegExp( \"[\\\\\\\\\\\"](.)\", \"g\" ), '$1') :\n            arrMatches[3]);\n    }\n    if (header) {\n        let hData = arrData.shift();\n        let hashData = arrData.map(row => {\n            let i = 0;\n            return hData.reduce(\n                (acc, key) => { \n                    acc[key] = row[i++]; \n                    return acc; \n                },\n                {}\n            );\n        });\n        return hashData;\n    } else {\n        return arrData;\n    }\n}\n\nconst readFile = async file => {\n  if (!file) return\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onload = event => resolve(event.target.result)\n    reader.onerror = error => reject(error)\n    reader.readAsText(file)\n  })\n}\n\nfunction ImportCSV(props) {\n  const fileContents = useAsyncCallback(readFile)\n  \n  function getFile(e){\n    const input = e.target\n    if('files' in input && input.files.length > 0) {\n      fileContents.execute(input.files[0])\n    }\n  }\n\n  useEffect(() => {\n    if(!fileContents.result) return\n\n    let data = csvStringToArray(fileContents.result, false)\n    // console.log(data)\n    data.shift()\n    \n    // map data to schema\n    // eventually can provide a UI to match headers with schema\n    let schema = ['format',\n                  'divNum',\n                  'divName',\n                  'secNum',\n                  'secName',\n                  'keyNum',\n                  'keyDesc',\n                  'interior',\n                  'exterior',\n                  'function',\n                  'source',\n                  'contact',\n                  'sku',\n                  'color',\n                  'finish',\n                  'remark']\n\n    data = data.map((val,index,arr) => {\n      let row = new Y.Map()\n      val.map((v,i) => row.set(schema[i], v))\n      return row\n    })\n\n    props.yInsert(0, data)\n\n  },[fileContents.result])\n\n  return (\n    <div>\n      <label htmlFor=\"input-file\">Choose a CSV File:</label>\n      <input id=\"input-file\" type=\"file\" onChange={getFile}></input>\n    </div>\n  );\n}\n\nexport default ImportCSV;","import React, { useEffect, useMemo } from 'react';\n\n// Change projects, also views for current project\nfunction Drawer({orgs, projects}) {\n  \n  return (\n    <div style={{height:'100%', width:'15%', background:'grey', position:'sticky', left:'0px'}}>\n      <h4>Born Ready Architecture</h4>\n      <ul>\n        <li>\n          Project 1\n        </li>\n        <li>\n          Project 2\n        </li>\n        <li>\n          Project 3\n        </li>\n        <li>\n          Project 4\n        </li>\n      </ul>\n    </div>\n    \n  );\n}\n\nexport default Drawer;","import React, { useEffect, useMemo } from 'react';\n\n// group / filter (search?) table;\nfunction TableControls({orgs, projects}) {\n  \n  return (\n    <div style={{width:'100%', height:'5%', background:'blue'}}>\n      \n    </div>\n  );\n}\n\nexport default TableControls;","import React, { useEffect, useMemo } from 'react';\n\n// click on icon to set name / color\nfunction Collaborators({collabs}) {\n  \n  return (\n    <div style={{display:'flex', alignItems:'center', justifyContent:'space-between', width:'100%'}}>\n      { \n        collabs.length ?\n        <span style={{fontWeight:'bold', color:collabs[0].color}}>\n          {collabs[0].name}\n        </span> : <></>\n      }\n      <div style={{display:'flex', justifyContent:'flex-end'}}>\n        {collabs.map((friend, i) => {\n          return <div style={{display:'flex',\n                              alignItems:'center', \n                              justifyContent:'center', \n                              backgroundColor:friend.color,\n                              boxShadow: i === 0 ? '0px 0px 8px 0px rgba(0,0,0,0.7)' : 'none',\n                              color:'white',\n                              margin:'0.5%',\n                              height:'40px', \n                              width:'40px', \n                              borderRadius:'20px'}}>\n            {friend.name.match(/(^\\S\\S?|\\b\\S)?/g).join(\"\").match(/(^\\S|\\S$)?/g).join(\"\").toUpperCase()}\n          </div>\n        })}\n      </div>\n    </div>\n    \n  );\n}\n\nexport default Collaborators;","import React, { useEffect, useMemo } from 'react';\n\nimport Collaborators from '../Collaborators/Collaborators'\n\n// Change projects, also views for current project\nfunction AppBar({collabs}) {\n  \n  return (\n    <div style={{width:'100%', \n                 height:'75px', \n                 background:'light-grey', \n                 position:'sticky', \n                 left:'0px', \n                 top:'0px', \n                 padding:'1%',\n                 boxSizing:'border-box',\n                 display:'flex'}}>\n      <Collaborators collabs={collabs}/>\n    </div>\n    \n  );\n}\n\nexport default AppBar;","import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useYDoc, useYArray, useYMap } from 'zustand-yjs'\nimport './App.css';\n\nimport styled from 'styled-components'\n\nimport * as Y from 'yjs'\nimport { WebsocketProvider } from 'y-websocket'\n\nimport * as chroma from 'chroma-js'\n\n// import Collaborators from './Components/Collaborators/Collaborators'\nimport DataTable from './Components/DataTable/DataTable'\nimport ImportCSV from './Components/ImportCSV/ImportCSV';\nimport Drawer from './Components/Drawer/Drawer';\nimport TableControls from './Components/TableControls/TableControls';\nimport AppBar from './Components/AppBar/AppBar';\n\nconst Styles = styled.div`\n  margin:10px;\n  \n  table {\n    border-spacing: 0;\n    border: 1px solid grey;\n    border-radius: 5px;\n    background: rgb(224,224,230);\n    background: linear-gradient(0deg, rgba(224,224,230,1) 0%, rgba(246,246,251,1) 100%);\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n          border-radius: 0px 0px 0px 5px;\n          :last-child {\n            border-radius: 0px 0px 5px 0px;\n          }\n        }\n      }\n    }\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid grey;\n      border-right: 1px solid grey;\n      :last-child {\n        border-right: 0;\n      }\n      input {\n        border:none;\n        border-bottom: 1px dotted grey;\n        background:none;\n        cursor:pointer;\n        :focus{\n          outline:none;\n          background:rgba(242,242,242,0.75)\n        }\n      }\n    }\n  }\n`\n\nconst blankRow = {\n  format: 'lala',\n  divNum: '1235',\n  divName: 'blabla',\n  secNum: '',\n  secName: '',\n  keyNum: '',\n  keyDesc: '',\n  interior: false,\n  exterior: false,\n  function: '',\n  source: '',\n  contact: '',\n  sku: '',\n  color: '',\n  finish: '',\n  remarks: ''\n}\n\nfunction randomName(){\n  let names1 = ['Bold','Confident','Cunning','Sincere','Thoughtful','Honest','Happy','Amorous','Enlightened','Pretty','Persistent','Passionate','Loving','Faithful','Nice','Optimistic','Plucky','Thoughtful','Funny','Frank','Fearless','Considerate','Courageous','Marvelous','Capable','Accomplished','Wise','Adept','Expert','Engaging']\n  let names2 = ['Aardvark','Antelope','Fox','Dog','Alligator','Anteater','Ocelot','Tiger','Bear','Whale','Dolphin','Snake','Dragon','Salmon','Tuna','Cuttlefish','Squid','Octopus','Cat','Lion','Cricket','Grasshopper','Rhino','Zebra','Quetzal','Toucan']\n\n  let firstName = names1[Math.floor(Math.random() * names1.length)]\n  let lastName = names2[Math.floor(Math.random() * names2.length)]\n\n  return firstName + ' ' + lastName\n}\n\nvar awareProvider\n\nconst connectDoc = (doc) => {\n  console.log('connect to a provider with room', doc.guid)\n  const wsProvider = new WebsocketProvider('ws://matte-server.herokuapp.com/', 'my-room3', doc)\n  \n  wsProvider.on('status', event => {\n    console.log(event.status)\n  })\n\n  awareProvider = wsProvider.awareness\n\n  awareProvider.setLocalState({ \n      color: chroma.random().hex(),\n      name: randomName(),\n      clientID: awareProvider.clientID\n    })\n\n  return () => console.log('disconnect', doc.guid)\n}\n\nconst useAwareness = (initAwareness) => {\n  const [collabs, setCollabs] = useState([])\n  const [awareness, setAwareness] = useState(initAwareness)\n\n  useEffect(() => {\n    if(typeof awareness !== 'undefined'){\n      setCollabs(Array.from(awareness.getStates().values()))\n\n      awareness.on('update', () => {\n        setCollabs(Array.from(awareProvider.getStates().values()))\n      })\n    }\n  },[awareness])\n  \n  return [collabs, setAwareness]\n}\n\n\nfunction App() {\n\n  const ydoc = useYDoc('docguid', connectDoc)\n  const {data, push: yPush, insert: yInsert} = useYArray(ydoc.getArray('table1'))\n  \n  const [collabs, setAwareness] = useAwareness(awareProvider)\n  \n  const columns = React.useMemo(() => [\n    {\n      Header: 'Format',\n      accessor: 'format', // accessor is the \"key\" in the data\n    },{\n      Header: 'Division Number',\n      accessor: 'divNum',\n    },{\n      Header: 'Division Name',\n      accessor: 'divName',\n    },{\n      Header: 'Section Number',\n      accessor: 'secNum',\n    },{\n      Header: 'Section Name',\n      accessor: 'secName',\n    },{\n      Header: 'Keynote Number',\n      accessor: 'keyNum',\n    },{\n      Header: 'Keynote Description',\n      accessor: 'keyDesc',\n    },{\n      Header: 'Interior',\n      accessor: 'interior',\n    },{\n      Header: 'Exterior',\n      accessor: 'exterior',\n    },{\n      Header: 'Function/Location',\n      accessor: 'function',\n    },{\n      Header: 'Source',\n      accessor: 'source',\n    },{\n      Header: 'Contact',\n      accessor: 'contact',\n    },{\n      Header: 'Product SKU',\n      accessor: 'sku',\n    },{\n      Header: 'Color',\n      accessor: 'color',\n    },{\n      Header: 'Finish',\n      accessor: 'finish',\n    },{\n      Header: 'Remarks',\n      accessor: 'remarks',\n    },\n  ],[]\n  )\n\n  // useEffect(() => {\n  //   console.log(collabs)\n  // },[collabs])\n\n  const addRow = () => {\n    const row = new Y.Map()\n\n    for (let k in blankRow){\n      row.set(k, blankRow[k])\n    }\n\n    yPush([row])\n  }\n\n  return (\n    <div className=\"App\">\n      <AppBar collabs={collabs}/>\n      <div style={{display:'flex', flexDirection:'row', height:'100%'}}>\n        <Drawer/>\n        <div style={{display:'flex', flexDirection:'column', width:'85%'}}>\n          <TableControls/>\n          <div style={{display:'flex', flexDirection:'column'}}>\n            <Styles>\n              <DataTable columns={columns} data={data} awareProvider={awareProvider} collabs={collabs}/>\n            </Styles>\n            <div style={{width:'100%', display:'flex'}}>\n              <input type=\"button\" value=\"+\" onClick={addRow}/>\n              <ImportCSV doc={ydoc} yPush={yPush} yInsert={yInsert}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}