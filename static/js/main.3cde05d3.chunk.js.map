{"version":3,"sources":["Components/Collaborators/Collaborators.js","Components/ImportCSV/ImportCSV.js","Components/Table/Toolbar.js","Components/Table/Row.js","Components/Table/TableHeader.js","Components/Table/GlobalControls.js","Components/Table/DataTable.js","Components/Drawer/Drawer.js","Components/AppBar/AppBar.js","App.js","reportWebVitals.js","index.js"],"names":["Collaborators","collabs","className","style","display","alignItems","justifyContent","map","friend","i","Avatar","isSolid","name","size","zIndex","readFile","file","a","reader","FileReader","Promise","resolve","reject","onload","event","target","result","onerror","error","readAsText","ImportCSV","props","fileContents","useAsyncCallback","useEffect","data","strData","header","objPattern","RegExp","arrMatches","arrData","exec","length","push","replace","hData","shift","row","reduce","acc","key","csvStringToArray","schema","val","index","arr","Y","v","set","yInsert","FilePicker","onChange","e","input","files","execute","placeholder","blankRow","b","c","d","f","Toolbar","yDoc","yPush","width","Button","iconBefore","PlusIcon","onClick","k","marginRight","Popover","bringFocusInside","position","Position","BOTTOM","content","Pane","paddingX","paddingY","flexDirection","doc","ImportIcon","ExportIcon","EditCell","initialValue","value","column","awareProvider","React","useState","setVal","editor","setEditor","editors","filter","cursor","setLocalStateField","onBlur","border","color","boxSizing","EditRow","useYMap","original","getRowProps","cells","cell","getCellProps","isPlaceholder","render","id","GroupedRow","depth","colSpan","Object","keys","values","height","appearance","isExpanded","ChevronDownIcon","ChevronRightIcon","getToggleRowExpandedProps","groupByVal","TableHeader","getHeaderProps","BOTTOM_LEFT","Menu","Group","Item","icon","EditIcon","GroupObjectsIcon","getGroupByToggleProps","TextDropdownButton","iconAfter","MoreIcon","padding","GlobalControls","IconButton","FilterListIcon","CogIcon","Styles","styled","div","theme","text","grey","secondary","randomName","names1","names2","Math","floor","random","connectDoc","wsProvider","WebsocketProvider","on","console","log","status","awareness","setLocalState","chroma","hex","clientID","guid","DataTable","useYDoc","useYArray","getArray","insert","initAwareness","setCollabs","setAwareness","Array","from","getStates","useAwareness","columns","useMemo","Header","accessor","useTable","useGroupBy","useExpanded","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","groupBy","expanded","headerGroup","getHeaderGroupProps","headers","canExpand","toJSON","Drawer","orgs","projects","Heading","marginTop","marginLeft","marginBottom","borderBottom","UnorderedList","ListItem","TickCircleIcon","iconColor","Link","href","AppBar","left","top","backgroundColor","boxShadow","contrastText","primary","primaryLite","secondaryLite","ok","warning","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cde05d3.chunk.js","sourcesContent":["import React, { useEffect, useMemo } from 'react';\n\nimport {Avatar} from 'evergreen-ui'\nimport './Collaborators.css'\n\n// click on icon to set name / color\nfunction Collaborators({collabs}) {\n  \n  return (\n    <div className=\"anim_container\" style={{display:'flex', alignItems:'center', justifyContent:'space-between'}}>\n      {collabs.map((friend, i) => {\n        return <Avatar className=\"anim_avatar\" isSolid name={friend.name ? friend.name : \"Anonymous Mouse\"} size={36} style={{zIndex:i*-1}} />\n      })}\n    </div>\n  );\n}\n\nexport default Collaborators;","import { FilePicker } from 'evergreen-ui';\nimport React, { useEffect, useMemo } from 'react';\nimport { useAsyncCallback } from 'react-async-hook';\n\nimport * as Y from 'yjs'\n\n// https://gist.github.com/plbowers/7560ae793613ee839151624182133159\nconst csvStringToArray = (strData, header=true) =>\n{\n    //const objPattern = new RegExp((\"(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|([^\\\\,\\\\r\\\\n]*))\"),\"gi\");\n    const objPattern = new RegExp((\"(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\\\"((?:\\\\\\\\.|\\\"\\\"|[^\\\\\\\\\\\"])*)\\\"|([^\\\\,\\\"\\\\r\\\\n]*))\"),\"gi\");\n    let arrMatches = null, arrData = [[]];\n    while (arrMatches = objPattern.exec(strData)){\n        if (arrMatches[1].length && arrMatches[1] !== \",\") arrData.push([]);\n        arrData[arrData.length - 1].push(arrMatches[2] ? \n            arrMatches[2].replace(new RegExp( \"[\\\\\\\\\\\"](.)\", \"g\" ), '$1') :\n            arrMatches[3]);\n    }\n    if (header) {\n        let hData = arrData.shift();\n        let hashData = arrData.map(row => {\n            let i = 0;\n            return hData.reduce(\n                (acc, key) => { \n                    acc[key] = row[i++]; \n                    return acc; \n                },\n                {}\n            );\n        });\n        return hashData;\n    } else {\n        return arrData;\n    }\n}\n\nconst readFile = async file => {\n  if (!file) return\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onload = event => resolve(event.target.result)\n    reader.onerror = error => reject(error)\n    reader.readAsText(file)\n  })\n}\n\nfunction ImportCSV(props) {\n  const fileContents = useAsyncCallback(readFile)\n  \n  function getFile(e){\n    const input = e.target\n    if('files' in input && input.files.length > 0) {\n      fileContents.execute(input.files[0])\n    }\n  }\n\n  useEffect(() => {\n    if(!fileContents.result) return\n\n    let data = csvStringToArray(fileContents.result, false)\n    // console.log(data)\n    data.shift()\n    \n    // map data to schema\n    // eventually can provide a UI to match headers with schema\n    let schema = ['format',\n                  'divNum',\n                  'divName',\n                  'secNum',\n                  'secName',\n                  'keyNum',\n                  'keyDesc',\n                  'interior',\n                  'exterior',\n                  'function',\n                  'source',\n                  'contact',\n                  'sku',\n                  'color',\n                  'finish',\n                  'remark']\n\n    data = data.map((val,index,arr) => {\n      let row = new Y.Map()\n      val.map((v,i) => row.set(schema[i], v))\n      return row\n    })\n\n    props.yInsert(0, data)\n\n  },[fileContents.result])\n\n  return (\n    // <div>\n    //   <label htmlFor=\"input-file\">Choose a CSV File:</label>\n    //   <input id=\"input-file\" type=\"file\" onChange={getFile}></input>\n    // </div>\n    <FilePicker onChange={getFile} placeholder=\"Choose a CSV File\"/>\n  );\n}\n\nexport default ImportCSV;","// Add row, import CSV, download CSV buttons\nimport React, { useEffect, useMemo } from 'react';\n\nimport Collaborators from '../Collaborators/Collaborators'\n\nimport * as Y from 'yjs'\n\nimport {Button, ExportIcon, ImportIcon, Pane, PlusIcon, Popover, Position} from 'evergreen-ui'\n\nimport ImportCSV from '../ImportCSV/ImportCSV'\n\nconst blankRow = {\n  a: 'lala',\n  b: '1235',\n  c: 'blabla',\n  d: '',\n  e: '',\n  f: '',\n}\n\n// Change projects, also views for current project\nfunction Toolbar({yDoc, yPush, yInsert}) {\n  \n  const addRow = () => {\n    const row = new Y.Map()\n\n    for (let k in blankRow){\n      row.set(k, blankRow[k])\n    }\n\n    yPush([row])\n  }\n\n  return (\n    <div style={{width:'100%', display:'flex', alignItems:'flex-start'}}>\n      <Button iconBefore={PlusIcon} onClick={addRow} marginRight={8}>Add Row</Button>\n      <Popover\n        bringFocusInside\n        position={Position.BOTTOM}\n        content={\n          <Pane\n          paddingX={10}\n          paddingY={10}\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexDirection=\"column\">\n            <ImportCSV doc={yDoc} yPush={yPush} yInsert={yInsert}/>\n          </Pane> \n        }>\n          <Button iconBefore={ImportIcon} marginRight={8}>Import CSV</Button>\n        </Popover>\n        <Button iconBefore={ExportIcon}>Export CSV</Button>\n    </div>\n  );\n}\n\nexport default Toolbar;\n\n\n\n","// Editable Row, and Cell Components\n\n// Table container, data and useTable\n\nimport React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTable, useGroupBy, useExpanded, useRowState } from 'react-table'\nimport { useYDoc, useYArray, useYMap } from 'zustand-yjs'\nimport { Button, ChevronDownIcon, ChevronRightIcon, CollapseAllIcon, ExpandAllIcon, Heading } from 'evergreen-ui'\n\nexport const EditCell = ({\n  value: initialValue,\n  set: set,\n  column,\n  row,\n  awareProvider,\n  collabs,\n}) => {\n\n  const [val, setVal] = React.useState(initialValue)\n  const [editor, setEditor] = React.useState(null)\n  \n  useEffect(() => {\n    setVal(initialValue)\n  },[initialValue])\n\n  useEffect(() => {\n    let editors = [null]\n    if(typeof collabs !== 'undefined') {\n      editors = collabs.filter(val => (val.cursor && val.cursor.row === row && val.cursor.column === column))\n    }\n    setEditor(editors[0])\n  },[collabs])\n\n  const onChange = e => {\n    setVal(`${e.target.value}`)\n    if(typeof awareProvider !== 'undefined'){\n      awareProvider.setLocalStateField('cursor', {\n        column: column,\n        row: row\n      })\n    }\n  }\n\n  const onBlur = e => {\n    set(column, `${e.target.value}`)\n  }\n\n  return (\n    <>\n      { \n        editor ? \n        <input style={{border:'3px solid' + editor.color, boxSizing:'border-box'}} value={val} onChange={onChange} onBlur={onBlur}/> :\n        <input style={{boxSizing:'border-box'}} value={val} onChange={onChange} onBlur={onBlur}/>\n      }\n    </>\n  )\n}\n\nexport const EditRow = ({\n  row: row,\n  awareProvider,\n  collabs,\n}) => {\n  \n  // Keep and update the state of the cell\n  const { set, data } = useYMap(row.original)\n  \n  return (\n    <tr {...row.getRowProps()}>\n      {row.cells.map(cell => {\n        return (\n          <td {...cell.getCellProps()}>\n            {cell.isPlaceholder ? (\n                <></>\n              ) : (\n                cell.render(EditCell, {value:cell.value, \n                                        column: cell.column.id, \n                                        row:cell.row.id, \n                                        set: set, \n                                        awareProvider, \n                                        collabs})\n              )\n            }\n          </td>\n        )\n      })}\n    </tr>  \n  )\n}\n\nexport const GroupedRow = ({\n  row: row,\n}) => {\n\n  return (\n    <tr {...row.getRowProps()}>\n      {row.cells.map((cell, i) => {\n          if(i > row.depth) return \n          return (\n            i === row.depth ?\n              <td colSpan={Object.keys(row.values).length - i} style={{display:'flex'}} {...cell.getCellProps()}>\n                <Button height={32} appearance=\"minimal\" iconBefore={row.isExpanded ? <ChevronDownIcon/>  : <ChevronRightIcon/>}  {...row.getToggleRowExpandedProps()}> \n                  {row.groupByVal}\n                </Button>\n              </td>\n              :\n              cell.render(<td></td>)\n          )\n      })}\n    </tr>  \n  )\n}","// Add row, import CSV, download CSV buttons\nimport React, { useEffect, useMemo } from 'react';\n\nimport Collaborators from '../Collaborators/Collaborators'\n\nimport * as Y from 'yjs'\n\nimport {Table, Menu, Popover, Position, TextDropdownButton, MoreIcon, EditIcon, GroupObjectsIcon, ExpandAllIcon} from 'evergreen-ui'\n\n// Change projects, also views for current project\nfunction TableHeader({column}) {\n\n  return (\n    <th {...column.getHeaderProps()}>\n      <Popover\n        position={Position.BOTTOM_LEFT}\n        content={\n          <Menu>\n            <Menu.Group>\n              <Menu.Item icon={EditIcon}>Rename</Menu.Item>\n              <Menu.Item icon={GroupObjectsIcon} {...column.getGroupByToggleProps()}>Group by</Menu.Item>\n            </Menu.Group>\n          </Menu>\n        }>\n          <TextDropdownButton\n            iconAfter={MoreIcon}\n            style={{\n              width:'calc(100% - 20px)',\n              justifyContent:'space-between',\n              padding:'0px 10px',\n            }}\n          >\n            {column.render('Header')}\n          </TextDropdownButton>\n        </Popover>\n    </th>\n  );\n}\n\nexport default TableHeader;","// Add row, import CSV, download CSV buttons\nimport React from 'react';\n\nimport {IconButton} from 'evergreen-ui'\nimport {CogIcon, GroupObjectsIcon, FilterListIcon} from 'evergreen-ui'\nimport Collaborators from '../Collaborators/Collaborators';\n\n// Change projects, also views for current project\nfunction GlobalControls({collabs}) {\n\n  return (\n    <div style={{display:'flex', alignItems:'center', justifyContent:'space-between'}}>\n        <div style={{display:'flex'}}>\n          <IconButton icon={GroupObjectsIcon} marginRight={8}/>\n          <IconButton icon={FilterListIcon} marginRight={8}/>\n          <IconButton icon={CogIcon}/>\n        </div>\n        <Collaborators collabs={collabs}/>\n    </div>\n  );\n}\n\nexport default GlobalControls;","// Table container, data and useTable\n\nimport React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTable, useGroupBy, useExpanded, useRowState } from 'react-table'\nimport { useYDoc, useYArray, useYMap } from 'zustand-yjs'\nimport {Heading, Table} from 'evergreen-ui'\n\nimport { WebsocketProvider } from 'y-websocket'\nimport * as chroma from 'chroma-js'\n\nimport Toolbar from './Toolbar'\nimport {EditRow, EditCell, GroupedRow} from './Row'\nimport {Footer} from './Toolbar'\nimport TableHeader from './TableHeader'\n\nimport GlobalControls from './GlobalControls'\n\nconst Styles = styled.div`\n  width: ${props => props.width};\n  padding: 24px;\n  \n  max-width:100%;\n  display: block;\n\n  .tableWrap {\n    display: block;\n    max-width: 100%;\n    overflow-x: auto;\n    overflow-y: hidden;\n  }\n\n  table {\n    width: 100%;\n    border-spacing: 0;\n\n    margin: 4px 0px 4px 0px;\n    color: ${props => props.theme.text};\n    border-spacing: 0;\n    border: 1px solid ${props => props.theme.text};\n    border-radius: 2px;\n\n    tr {\n      :last-child {\n        td {\n          margin: 0px\n\n          border-bottom: 0;\n          border-radius: 0px 0px 0px 2px;\n\n          width: 1%;\n          /* But \"collapsed\" cells should be as small as possible */\n          &.collapse {\n            width: 0.0000000001%;\n          }\n\n          :last-child {\n            border-radius: 0px 0px 2px 0px;\n          }\n        }\n      }\n    }\n    th,\n    td {\n      margin: 0;\n      padding: 0.25rem;\n      border-bottom: 1px dotted ${props => props.theme.grey};\n      border-right: 1px dotted ${props => props.theme.grey};\n      :last-child {\n        border-right: 0;\n      }\n      input {\n        border:none;\n        /*border-bottom: 1px dotted grey;*/\n        background:none;\n        cursor:pointer;\n        :focus{\n          outline:none;\n          /*background:${props => props.theme.grey};*/\n          border-bottom: 1px dotted ${props => props.theme.secondary};\n        }\n      }\n    }\n  }\n`\n\nfunction randomName(){\n  let names1 = ['Bold','Confident','Cunning','Sincere','Thoughtful','Honest','Happy','Amorous','Enlightened','Pretty','Persistent','Passionate','Loving','Faithful','Nice','Optimistic','Plucky','Thoughtful','Funny','Frank','Fearless','Considerate','Courageous','Marvelous','Capable','Accomplished','Wise','Adept','Expert','Engaging']\n  let names2 = ['Aardvark','Antelope','Fox','Dog','Alligator','Anteater','Ocelot','Tiger','Bear','Whale','Dolphin','Snake','Dragon','Salmon','Tuna','Cuttlefish','Squid','Octopus','Cat','Lion','Cricket','Grasshopper','Rhino','Zebra','Quetzal','Toucan']\n\n  let firstName = names1[Math.floor(Math.random() * names1.length)]\n  let lastName = names2[Math.floor(Math.random() * names2.length)]\n\n  return firstName + ' ' + lastName\n}\n\nvar awareProvider\n\nconst connectDoc = (doc) => {\n  // console.log('connect to a provider with room', doc.guid)\n\n  // const wsProvider = new WebsocketProvider('wss://matte-server.herokuapp.com/', 'my-room3', doc)\n  const wsProvider = new WebsocketProvider('ws://localhost:1234', 'my-room5', doc)\n  \n  wsProvider.on('status', event => {\n    console.log(event.status)\n  })\n\n  awareProvider = wsProvider.awareness\n\n  awareProvider.setLocalState({ \n      color: chroma.random().hex(),\n      name: randomName(),\n      clientID: awareProvider.clientID\n    })\n\n  return () => console.log('disconnect', doc.guid)\n}\n\nconst useAwareness = (initAwareness) => {\n  const [collabs, setCollabs] = useState([])\n  const [awareness, setAwareness] = useState(initAwareness)\n\n  useEffect(() => {\n    if(typeof awareness !== 'undefined'){\n      setCollabs(Array.from(awareness.getStates().values()))\n\n      awareness.on('update', () => {\n        setCollabs(Array.from(awareProvider.getStates().values()))\n      })\n    }\n  },[awareness])\n  \n  return [collabs, setAwareness]\n}\n\nfunction DataTable({width}) {\n  const yDoc = useYDoc('docguid', connectDoc)\n  const {data, push: yPush, insert: yInsert} = useYArray(yDoc.getArray('table1'))\n  \n  const [collabs, setAwareness] = useAwareness(awareProvider)\n\n  const columns = React.useMemo(() => [\n    {\n      Header: 'A',\n      accessor: 'a', // accessor is the \"key\" in the data\n    },{\n      Header: 'B',\n      accessor: 'b',\n    },{\n      Header: 'C',\n      accessor: 'c',\n    },{\n      Header: 'D',\n      accessor: 'd',\n    },{\n      Header: 'E',\n      accessor: 'e',\n    },{\n      Header: 'F',\n      accessor: 'f',\n    }\n  ],[]\n  )\n\n  // Columns as a yArray of yMaps so we can change schema collaboratively\n  // const columnsInit = [\n  //   {\n  //     Header: 'A',\n  //     accessor: 'a', // accessor is the \"key\" in the data\n  //   },{\n  //     Header: 'B',\n  //     accessor: 'b',\n  //   },{\n  //     Header: 'C',\n  //     accessor: 'c',\n  //   },{\n  //     Header: 'D',\n  //     accessor: 'd',\n  //   },{\n  //     Header: 'E',\n  //     accessor: 'e',\n  //   },{\n  //     Header: 'F',\n  //     accessor: 'f',\n  //   }\n  // ]\n\n  // const {data: columns, get: colGet, slice: colSlice } = useYArray(yDoc.getArray('table_columns'))\n  \n  // useEffect(() => {\n  //   columnsInit.map((val, i) => {\n  //     let col = colGet(i)\n  //     console.log(col)\n  //     if(!col) \n  //   })\n  // }, [])\n\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: { groupBy, expanded },\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGroupBy,\n    useExpanded,\n  )\n\n  return (\n    <Styles width={width}>\n      <GlobalControls collabs={collabs}/>\n      <div className=\"tableWrap\">\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                    <TableHeader column={column}/>\n                ))}\n              </tr>\n            ))}\n          </thead>\n\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n\n              // is there a better place to do this?\n              if(!row.canExpand){\n                row.values = row.original.toJSON()\n              }\n\n              prepareRow(row)\n\n              return (            \n                <>\n                {row.canExpand ? <GroupedRow row={row}/> : <EditRow row={row} awareProvider={awareProvider} collabs={collabs}/>}\n                </>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <Toolbar yDoc={yDoc} yPush={yPush} yInsert={yInsert}/>\n    </Styles>\n  )\n}\n\nexport default DataTable","import { Heading, ListItem, Pane, Text, TickCircleIcon, UnorderedList, Menu, Link } from 'evergreen-ui';\nimport React, { useEffect, useMemo } from 'react';\n\n// Change projects, also views for current project\nfunction Drawer({orgs, projects, width}) {\n  \n  return (\n    <Pane\n      height=\"100%\"\n      width={width}\n      display=\"flex\"\n      border=\"default\"\n      flexDirection=\"column\"\n      alignItems=\"flex-start\"\n      border=\"none\"\n      boxShadow=\"1px 0px 2px 1px rgba(0,0,0,0.125)\"\n    >\n      <Heading size={600} marginTop={24} marginLeft={8} marginBottom={16}>Projects</Heading>\n      <div style={{marginLeft:'8px', borderBottom:'1px solid #E4E7EB',width:'85%',height:'1px',boxSizing:'border-box'}}/>\n      <UnorderedList marginLeft={32}>\n        <ListItem icon={TickCircleIcon} iconColor=\"success\"><Link href='#' color=\"neutral\">Project 1</Link></ListItem>\n        <ListItem icon={TickCircleIcon} iconColor=\"success\"><Link href='#' color=\"neutral\">Project 2</Link></ListItem>\n        <ListItem icon={TickCircleIcon} iconColor=\"success\"><Link href='#' color=\"neutral\">Project 3</Link></ListItem>\n      </UnorderedList>\n    </Pane>\n    \n  );\n}\n\nexport default Drawer;","import React, { useEffect, useMemo } from 'react';\n\nimport {Button, Heading} from 'evergreen-ui'\n// Change projects, also views for current project\nfunction AppBar() {\n  \n  return (\n    <div style={{width:'100%', \n                 height:'48px', \n                 left:'0px', \n                 top:'0px', \n                 padding:'1%',\n                 boxSizing:'border-box',\n                 display:'flex',\n                 backgroundColor:'#2979FF',\n                 boxShadow:\"0px 2px 3px 0px rgba(0,0,0,0.35)\",\n                 zIndex:'1000',\n                 display:'flex',\n                 alignItems:'center',\n                 justifyContent:'space-between'\n                 }}>\n        <Heading size='700' color='white'>matte.</Heading>\n        <div style={{display:'flex'}}>\n          <Button appearance=\"minimal\" height={40} style={{color:'white'}}>Search</Button>\n          <Button appearance=\"minimal\" height={40} style={{color:'white'}}>Organize</Button>\n          <Button appearance=\"minimal\" height={40} style={{color:'white'}}>Discover</Button>\n        </div>\n    </div>\n  );\n}\n\nexport default AppBar;","import React from 'react'\nimport './App.css'\n\nimport create from 'zustand'\n\nimport DataTable from './Components/Table/DataTable'\nimport Drawer from './Components/Drawer/Drawer'\nimport AppBar from './Components/AppBar/AppBar'\nimport {ThemeProvider} from 'styled-components'\n\nconst theme = {\n    text: '#001720',\n    contrastText: '#F8F9F9',\n\n    primary: '#f44336',\n    primaryLite: '#f6685e',\n\n    secondary: '#2979FF',\n    secondaryLite: '#5393ff',\n\n    ok: '#00A584',\n    warning: '#FEDF00',\n    alert: '#E91D27',\n\n    grey: '#CED3DF',\n  }\n  \n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n      <AppBar/>\n      <div style={{display:'flex', flexDirection:'row', height:'calc(100% - 48px)'}}>\n        <Drawer width='15%'/>\n        <DataTable width='85%'/>\n      </div>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}