{"version":3,"sources":["Components/Collaborators/Collaborators.js","Components/ImportCSV/ImportCSV.js","Components/Table/Toolbar.js","Components/Table/Row.js","Components/Table/TableHeader.js","Components/SchemaEdit/SchemaEdit.js","Components/Table/GlobalControls.js","Components/Table/DataTable.js","Components/Drawer/Drawer.js","Components/AppBar/AppBar.js","App.js","reportWebVitals.js","index.js"],"names":["Collaborators","collabs","className","style","display","alignItems","justifyContent","map","friend","i","Avatar","isSolid","name","size","zIndex","split","readFile","file","a","reader","FileReader","Promise","resolve","reject","onload","event","target","result","onerror","error","readAsText","ImportCSV","props","fileContents","useAsyncCallback","useEffect","data","strData","header","objPattern","RegExp","arrMatches","arrData","exec","length","push","replace","hData","shift","row","reduce","acc","key","csvStringToArray","schema","val","index","arr","Y","v","set","yInsert","FilePicker","onChange","e","input","files","execute","placeholder","blankRow","b","c","d","f","Toolbar","yDoc","yPush","width","Button","iconBefore","PlusIcon","onClick","k","marginRight","Popover","bringFocusInside","position","Position","BOTTOM","content","Pane","paddingX","paddingY","flexDirection","doc","ImportIcon","ExportIcon","EditCell","initialValue","value","column","awareProvider","React","useState","setVal","editor","setEditor","editors","filter","cursor","setLocalStateField","onBlur","border","color","boxSizing","EditRow","useYMap","original","getRowProps","cells","cell","getCellProps","isPlaceholder","render","id","GroupedRow","depth","colSpan","Object","keys","values","height","appearance","isExpanded","ChevronDownIcon","ChevronRightIcon","getToggleRowExpandedProps","groupByVal","TableHeader","getHeaderProps","BOTTOM_RIGHT","Menu","Group","Item","icon","EditIcon","accessor","GroupObjectsIcon","getGroupByToggleProps","TextDropdownButton","MoreIcon","padding","fields","SchemaEdit","columns","yColumn","Table","Head","TextHeaderCell","Body","col","Row","TextCell","TextInput","Header","Cell","Switch","getToggleHiddenProps","checked","isVisible","BOTTOM_LEFT","TranslateIcon","NumericalIcon","TickCircleIcon","GlobeNetworkIcon","DocumentIcon","iconAfter","GlobalControls","open","setOpen","IconButton","FilterListIcon","Dialog","isShown","title","onCloseComplete","confirmLabel","CogIcon","Styles","styled","div","theme","text","grey","secondary","randomName","names1","names2","Math","floor","random","connectDoc","wsProvider","WebsocketProvider","on","console","log","status","awareness","setLocalState","chroma","hex","clientID","guid","columnsInit","DataTable","project","org","useYDoc","useYArray","getArray","insert","getMap","yColumns","cSet","initAwareness","setCollabs","setAwareness","Array","from","getStates","useAwareness","useMemo","useTable","useGroupBy","useExpanded","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","allColumns","groupBy","expanded","getToggleHideAllColumnsProps","headerGroup","getHeaderGroupProps","headers","canExpand","toJSON","Drawer","orgs","projects","setOrgs","setProjs","Heading","marginTop","marginLeft","marginBottom","current","ChevronLeftIcon","borderBottom","OptionsGroup","options","all","p","label","selected","sel","Divider","AddIcon","intent","AppBar","left","top","backgroundColor","boxShadow","contrastText","primary","primaryLite","secondaryLite","ok","warning","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a701dfa.chunk.js","sourcesContent":["import React, { useEffect, useMemo } from 'react';\n\nimport {Avatar} from 'evergreen-ui'\nimport './Collaborators.css'\n\n// click on icon to set name / color\nfunction Collaborators({collabs}) {\n  \n  return (\n    <div className=\"anim_container\" style={{display:'flex', alignItems:'center', justifyContent:'space-between'}}>\n      {collabs.map((friend, i) => {\n        return <Avatar className=\"anim_avatar\" isSolid name={friend.name ? friend.name : \"Anonymous Mouse\"} size={36} style={{zIndex:i*-1}} key={friend.name.split(' ')[0]+i} />\n      })}\n    </div>\n  );\n}\n\nexport default Collaborators;","import { FilePicker } from 'evergreen-ui';\nimport React, { useEffect, useMemo } from 'react';\nimport { useAsyncCallback } from 'react-async-hook';\n\nimport * as Y from 'yjs'\n\n// https://gist.github.com/plbowers/7560ae793613ee839151624182133159\nconst csvStringToArray = (strData, header=true) =>\n{\n    //const objPattern = new RegExp((\"(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|([^\\\\,\\\\r\\\\n]*))\"),\"gi\");\n    const objPattern = new RegExp((\"(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\\\"((?:\\\\\\\\.|\\\"\\\"|[^\\\\\\\\\\\"])*)\\\"|([^\\\\,\\\"\\\\r\\\\n]*))\"),\"gi\");\n    let arrMatches = null, arrData = [[]];\n    while (arrMatches = objPattern.exec(strData)){\n        if (arrMatches[1].length && arrMatches[1] !== \",\") arrData.push([]);\n        arrData[arrData.length - 1].push(arrMatches[2] ? \n            arrMatches[2].replace(new RegExp( \"[\\\\\\\\\\\"](.)\", \"g\" ), '$1') :\n            arrMatches[3]);\n    }\n    if (header) {\n        let hData = arrData.shift();\n        let hashData = arrData.map(row => {\n            let i = 0;\n            return hData.reduce(\n                (acc, key) => { \n                    acc[key] = row[i++]; \n                    return acc; \n                },\n                {}\n            );\n        });\n        return hashData;\n    } else {\n        return arrData;\n    }\n}\n\nconst readFile = async file => {\n  if (!file) return\n  const reader = new FileReader()\n  return new Promise((resolve, reject) => {\n    reader.onload = event => resolve(event.target.result)\n    reader.onerror = error => reject(error)\n    reader.readAsText(file)\n  })\n}\n\nfunction ImportCSV(props) {\n  const fileContents = useAsyncCallback(readFile)\n  \n  function getFile(e){\n    const input = e.target\n    if('files' in input && input.files.length > 0) {\n      fileContents.execute(input.files[0])\n    }\n  }\n\n  useEffect(() => {\n    if(!fileContents.result) return\n\n    let data = csvStringToArray(fileContents.result, false)\n    // console.log(data)\n    data.shift()\n    \n    // map data to schema\n    // eventually can provide a UI to match headers with schema\n    let schema = ['format',\n                  'divNum',\n                  'divName',\n                  'secNum',\n                  'secName',\n                  'keyNum',\n                  'keyDesc',\n                  'interior',\n                  'exterior',\n                  'function',\n                  'source',\n                  'contact',\n                  'sku',\n                  'color',\n                  'finish',\n                  'remark']\n\n    data = data.map((val,index,arr) => {\n      let row = new Y.Map()\n      val.map((v,i) => row.set(schema[i], v))\n      return row\n    })\n\n    props.yInsert(0, data)\n\n  },[fileContents.result])\n\n  return (\n    // <div>\n    //   <label htmlFor=\"input-file\">Choose a CSV File:</label>\n    //   <input id=\"input-file\" type=\"file\" onChange={getFile}></input>\n    // </div>\n    <FilePicker onChange={getFile} placeholder=\"Choose a CSV File\"/>\n  );\n}\n\nexport default ImportCSV;","// Add row, import CSV, download CSV buttons\nimport React, { useEffect, useMemo } from 'react';\n\nimport Collaborators from '../Collaborators/Collaborators'\n\nimport * as Y from 'yjs'\n\nimport {Button, ExportIcon, ImportIcon, Pane, PlusIcon, Popover, Position} from 'evergreen-ui'\n\nimport ImportCSV from '../ImportCSV/ImportCSV'\n\nconst blankRow = {\n  a: 'lala',\n  b: '1235',\n  c: 'blabla',\n  d: '',\n  e: '',\n  f: '',\n}\n\n// Change projects, also views for current project\nfunction Toolbar({yDoc, yPush, yInsert}) {\n  \n  const addRow = () => {\n    const row = new Y.Map()\n\n    for (let k in blankRow){\n      row.set(k, blankRow[k])\n    }\n\n    yPush([row])\n  }\n\n  return (\n    <div style={{width:'100%', display:'flex', alignItems:'flex-start'}}>\n      <Button iconBefore={PlusIcon} onClick={addRow} marginRight={8}>Add Row</Button>\n      <Popover\n        bringFocusInside\n        position={Position.BOTTOM}\n        content={\n          <Pane\n          paddingX={10}\n          paddingY={10}\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexDirection=\"column\">\n            <ImportCSV doc={yDoc} yPush={yPush} yInsert={yInsert}/>\n          </Pane> \n        }>\n          <Button iconBefore={ImportIcon} marginRight={8}>Import CSV</Button>\n        </Popover>\n        <Button iconBefore={ExportIcon}>Export CSV</Button>\n    </div>\n  );\n}\n\nexport default Toolbar;\n\n\n\n","// Editable Row, and Cell Components\n\n// Table container, data and useTable\n\nimport React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTable, useGroupBy, useExpanded, useRowState } from 'react-table'\nimport { useYDoc, useYArray, useYMap } from 'zustand-yjs'\nimport { Button, ChevronDownIcon, ChevronRightIcon, CollapseAllIcon, ExpandAllIcon, Heading } from 'evergreen-ui'\n\nexport const EditCell = ({\n  value: initialValue,\n  set: set,\n  column,\n  row,\n  awareProvider,\n  collabs,\n}) => {\n\n  const [val, setVal] = React.useState(initialValue)\n  const [editor, setEditor] = React.useState(null)\n  \n  useEffect(() => {\n    setVal(initialValue)\n  },[initialValue])\n\n  useEffect(() => {\n    let editors = [null]\n    if(typeof collabs !== 'undefined') {\n      editors = collabs.filter(val => (val.cursor && val.cursor.row === row && val.cursor.column === column))\n    }\n    setEditor(editors[0])\n  },[collabs])\n\n  const onChange = e => {\n    setVal(`${e.target.value}`)\n    if(typeof awareProvider !== 'undefined'){\n      awareProvider.setLocalStateField('cursor', {\n        column: column,\n        row: row\n      })\n    }\n  }\n\n  const onBlur = e => {\n    set(column, `${e.target.value}`)\n  }\n\n  return (\n    <>\n      { \n        editor ? \n        <input style={{border:'3px solid' + editor.color, boxSizing:'border-box'}} value={val} onChange={onChange} onBlur={onBlur}/> :\n        <input style={{boxSizing:'border-box'}} value={val} onChange={onChange} onBlur={onBlur}/>\n      }\n    </>\n  )\n}\n\nexport const EditRow = ({\n  row: row,\n  awareProvider,\n  collabs,\n}) => {\n  \n  // Keep and update the state of the cell\n  const { set, data } = useYMap(row.original)\n  \n  return (\n    <tr {...row.getRowProps()}>\n      {row.cells.map(cell => {\n        return (\n          <td {...cell.getCellProps()}>\n            {cell.isPlaceholder ? (\n                <></>\n              ) : (\n                cell.render(EditCell, {value:cell.value, \n                                        column: cell.column.id, \n                                        row:cell.row.id, \n                                        set: set, \n                                        awareProvider, \n                                        collabs})\n              )\n            }\n          </td>\n        )\n      })}\n    </tr>  \n  )\n}\n\nexport const GroupedRow = ({\n  row: row,\n}) => {\n\n  return (\n    <tr {...row.getRowProps()}>\n      {row.cells.map((cell, i) => {\n          if(i > row.depth) return \n          return (\n            i === row.depth ?\n              <td colSpan={Object.keys(row.values).length - i} style={{display:'flex'}} {...cell.getCellProps()}>\n                <Button height={32} appearance=\"minimal\" iconBefore={row.isExpanded ? <ChevronDownIcon/>  : <ChevronRightIcon/>}  {...row.getToggleRowExpandedProps()}> \n                  {row.groupByVal}\n                </Button>\n              </td>\n              :\n              cell.render(<td></td>)\n          )\n      })}\n    </tr>  \n  )\n}","// Add row, import CSV, download CSV buttons\nimport React, { useEffect, useMemo } from 'react';\n\nimport Collaborators from '../Collaborators/Collaborators'\n\nimport * as Y from 'yjs'\n\nimport {Table, Pane, Menu, Popover, Position, TextDropdownButton, MoreIcon, EditIcon, GroupObjectsIcon, ExpandAllIcon} from 'evergreen-ui'\n\n// Change projects, also views for current project\nfunction TableHeader({column}) {\n\n  // would like to make this menu narrower\n  return (\n    <th {...column.getHeaderProps()}>\n      <Popover\n        position={Position.BOTTOM_RIGHT}\n        content={\n            <Menu>\n              <Menu.Group>\n                <Menu.Item icon={EditIcon} key={column.accessor+\"-rename\"}>Rename</Menu.Item>\n                <Menu.Item icon={GroupObjectsIcon} {...column.getGroupByToggleProps()} key={column.accessor+\"-groupBy\"}>Group by</Menu.Item>\n              </Menu.Group>\n            </Menu>\n        }>\n          <TextDropdownButton\n            icon={MoreIcon}\n            style={{\n              width:'calc(100% - 20px)',\n              justifyContent:'space-between',\n              padding:'0px 10px',\n            }}\n          >\n            {column.render('Header')}\n          </TextDropdownButton>\n        </Popover>\n    </th>\n  );\n}\n\nexport default TableHeader;","// Add row, import CSV, download CSV buttons\nimport React, { useEffect } from 'react';\n\nimport {\n  CodeIcon, \n  DocumentIcon, \n  GlobeNetworkIcon, \n  NumericalIcon, \n  Popover, \n  Switch, \n  Table, \n  TickCircleIcon, \n  TranslateIcon,\n  Menu,\n  Button,\n  Position,\n  TextInput,\n  ChevronDownIcon\n  } from 'evergreen-ui'\n\nconst fields = [\n  'Header',\n  'Show/Hide',\n  'Type',\n]\n\n// Change projects, also views for current project\nfunction SchemaEdit({columns, yColumn}) {\n\n  return (\n    <Table>\n      <Table.Head>\n        {fields.map(val =>\n            <Table.TextHeaderCell>\n              {val}\n            </Table.TextHeaderCell>\n        )}\n      </Table.Head>\n      <Table.Body>\n        {columns.map(col => \n          <Table.Row key={col.id}>\n            <Table.TextCell>\n              <TextInput\n                name={col.id + '-input'}\n                value={col.Header}\n                width=\"100%\"\n              />\n            </Table.TextCell>\n            <Table.Cell ><Switch {...col.getToggleHiddenProps()} checked={col.isVisible}/></Table.Cell>\n            <Table.TextCell>\n              <Popover\n                position={Position.BOTTOM_LEFT}\n                content={\n                  <Menu>\n                    <Menu.Group>\n                      <Menu.Item icon={TranslateIcon}>Text</Menu.Item>\n                      <Menu.Item icon={NumericalIcon}>Number</Menu.Item>\n                      <Menu.Item icon={TickCircleIcon}>Yes/No</Menu.Item>\n                      <Menu.Item icon={GlobeNetworkIcon}>URL</Menu.Item>\n                      <Menu.Item icon={DocumentIcon}>Attachment</Menu.Item>\n                    </Menu.Group>\n                  </Menu>\n                }>\n                <Button\n                  iconAfter={ChevronDownIcon}\n                  appearance=\"minimal\"\n                >\n                  Type\n                </Button>\n              </Popover>\n            </Table.TextCell>\n          </Table.Row>  \n        )}\n      </Table.Body>\n    </Table>\n  );\n}\n\nexport default SchemaEdit;","// Add row, import CSV, download CSV buttons\nimport React, {useState} from 'react';\n\nimport {Dialog, IconButton} from 'evergreen-ui'\nimport {CogIcon, GroupObjectsIcon, FilterListIcon} from 'evergreen-ui'\nimport Collaborators from '../Collaborators/Collaborators';\nimport SchemaEdit from '../SchemaEdit/SchemaEdit';\n\n// Change projects, also views for current project\nfunction GlobalControls({collabs, columns}) {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <div style={{display:'flex', alignItems:'center', justifyContent:'space-between'}}>\n        <div style={{display:'flex'}}>\n          <IconButton icon={GroupObjectsIcon} marginRight={8}/>\n          <IconButton icon={FilterListIcon} marginRight={8}/>\n          <Dialog\n            isShown={open}\n            title=\"Schema Edit Test\"\n            onCloseComplete={() => setOpen(false)}\n            confirmLabel='Confirm'>\n              <SchemaEdit columns={columns}></SchemaEdit>\n          </Dialog>\n          <IconButton icon={CogIcon} onClick={() => setOpen(true)}/>\n        </div>\n        <Collaborators collabs={collabs}/>\n    </div>\n  );\n}\n\nexport default GlobalControls;","// Table container, data and useTable\n\nimport React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTable, useGroupBy, useExpanded, useRowState } from 'react-table'\nimport * as Y from 'yjs'\nimport { useYDoc, useYArray, useYMap } from 'zustand-yjs'\nimport {Heading, Table} from 'evergreen-ui'\n\nimport { WebsocketProvider } from 'y-websocket'\nimport * as chroma from 'chroma-js'\n\nimport Toolbar from './Toolbar'\nimport {EditRow, EditCell, GroupedRow} from './Row'\nimport {Footer} from './Toolbar'\nimport TableHeader from './TableHeader'\n\nimport GlobalControls from './GlobalControls'\n\nconst Styles = styled.div`\n  width: ${props => props.width};\n  padding: 24px;\n  \n  max-width:100%;\n  display: block;\n\n  .tableWrap {\n    display: block;\n    max-width: 100%;\n    overflow-x: auto;\n    overflow-y: hidden;\n  }\n\n  table {\n    width: 100%;\n    border-spacing: 0;\n\n    margin: 4px 0px 4px 0px;\n    color: ${props => props.theme.text};\n    border-spacing: 0;\n    border: 1px solid ${props => props.theme.text};\n    border-radius: 2px;\n\n    tr {\n      :last-child {\n        td {\n          margin: 0px\n\n          border-bottom: 0;\n          border-radius: 0px 0px 0px 2px;\n\n          width: 1%;\n          /* But \"collapsed\" cells should be as small as possible */\n          &.collapse {\n            width: 0.0000000001%;\n          }\n\n          :last-child {\n            border-radius: 0px 0px 2px 0px;\n          }\n        }\n      }\n    }\n    th,\n    td {\n      margin: 0;\n      padding: 0.25rem;\n      border-bottom: 1px dotted ${props => props.theme.grey};\n      border-right: 1px dotted ${props => props.theme.grey};\n      :last-child {\n        border-right: 0;\n      }\n      input {\n        border:none;\n        /*border-bottom: 1px dotted grey;*/\n        background:none;\n        cursor:pointer;\n        :focus{\n          outline:none;\n          /*background:${props => props.theme.grey};*/\n          border-bottom: 1px dotted ${props => props.theme.secondary};\n        }\n      }\n    }\n  }\n`\n\nfunction randomName(){\n  let names1 = ['Bold','Confident','Cunning','Sincere','Thoughtful','Honest','Happy','Amorous','Enlightened','Pretty','Persistent','Passionate','Loving','Faithful','Nice','Optimistic','Plucky','Thoughtful','Funny','Frank','Fearless','Considerate','Courageous','Marvelous','Capable','Accomplished','Wise','Adept','Expert','Engaging']\n  let names2 = ['Aardvark','Antelope','Fox','Dog','Alligator','Anteater','Ocelot','Tiger','Bear','Whale','Dolphin','Snake','Dragon','Salmon','Tuna','Cuttlefish','Squid','Octopus','Cat','Lion','Cricket','Grasshopper','Rhino','Zebra','Quetzal','Toucan']\n\n  let firstName = names1[Math.floor(Math.random() * names1.length)]\n  let lastName = names2[Math.floor(Math.random() * names2.length)]\n\n  return firstName + ' ' + lastName\n}\n\nvar awareProvider\n\nconst connectDoc = (doc) => {\n  // console.log('connect to a provider with room', doc.guid)\n\n  const wsProvider = new WebsocketProvider('wss://matte-server.herokuapp.com/', 'my-room2', doc)\n  // const wsProvider = new WebsocketProvider('ws://localhost:1234', 'all-orgs-1', doc)\n  \n  wsProvider.on('status', event => {\n    console.log(event.status)\n  })\n\n  if(typeof awareProvider === 'undefined'){\n    awareProvider = wsProvider.awareness\n\n    awareProvider.setLocalState({ \n        color: chroma.random().hex(),\n        name: randomName(),\n        clientID: awareProvider.clientID\n      })\n  }\n\n  return () => {\n    console.log('disconnect', doc.guid)\n  }\n}\n\nconst useAwareness = (initAwareness) => {\n  const [collabs, setCollabs] = useState([])\n  const [awareness, setAwareness] = useState(initAwareness)\n\n  useEffect(() => {\n    if(typeof awareness !== 'undefined'){\n      setCollabs(Array.from(awareness.getStates().values()))\n\n      awareness.on('update', () => {\n        setCollabs(Array.from(awareProvider.getStates().values()))\n      })\n    }\n  },[awareness])\n  \n  return [collabs, setAwareness]\n}\n\n// Columns as a yArray of yMaps so we can change schema collaboratively\nconst columnsInit = [\n  {\n    Header: 'Forma',\n    accessor: 'a', // accessor is the \"key\" in the data\n  },{\n    Header: 'Code',\n    accessor: 'b',\n  },{\n    Header: 'Interior / Exterior',\n    accessor: 'c',\n  },{\n    Header: 'Manufacturer',\n    accessor: 'd',\n  },{\n    Header: 'Performance Spec',\n    accessor: 'e',\n  }\n]\n\nfunction DataTable({width, project, org}) {\n  const yDoc = useYDoc('lala', connectDoc)\n\n  const {data, push: yPush, insert: yInsert} = useYArray(yDoc.getArray(project.key + '-array'))\n  \n  const {data: yColumns, set: cSet } = useYMap(yDoc.getMap(project.key + '-columns'))\n\n  const [collabs, setAwareness] = useAwareness(awareProvider)\n\n  useEffect(() => {\n    // console.log(project)\n    columnsInit.map(val => {\n      cSet(val['accessor'], val['Header'])\n    })\n  },[project])\n\n  const columns = React.useMemo(() => {\n    // console.log(yColumns)\n    return(Object.keys(yColumns).map(k => {\n      return({Header: yColumns[k], accessor: k })\n    }))}\n  ,[yColumns])\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: { groupBy, expanded },\n    allColumns,\n    getToggleHideAllColumnsProps,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGroupBy,\n    useExpanded,\n  )\n\n  return (\n    <Styles width={width}>\n      <GlobalControls collabs={collabs} columns={allColumns}/>\n      <div className=\"tableWrap\">\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                    <TableHeader column={column}/>\n                ))}\n              </tr>\n            ))}\n          </thead>\n\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n\n              // is there a better place to do this?\n              if(!row.canExpand){\n                row.values = row.original.toJSON()\n              }\n\n              prepareRow(row)\n\n              return (            \n                <>\n                {row.canExpand ? <GroupedRow row={row}/> : <EditRow row={row} awareProvider={awareProvider} collabs={collabs}/>}\n                </>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n      <Toolbar yDoc={yDoc} yPush={yPush} yInsert={yInsert}/>\n    </Styles>\n  )\n}\n\nexport default DataTable","// import React, { useEffect, useMemo } from 'react';\n\nimport { Heading, Pane, Menu} from 'evergreen-ui';\nimport {AddIcon, MoreIcon, TickCircleIcon, IconButton, ChevronLeftIcon } from 'evergreen-ui'\n// Change projects, also views for current project\nfunction Drawer({orgs, projects, setOrgs, setProjs, width}) {\n\n  // this should become a menu with selected row being the current project\n  return (\n    <Pane\n      height=\"100%\"\n      width={width}\n      display=\"flex\"\n      border=\"default\"\n      flexDirection=\"column\"\n      alignItems=\"flex-start\"\n      border=\"none\"\n      boxShadow=\"1px 0px 2px 1px rgba(0,0,0,0.125)\"\n    >\n      <div style={{display:'flex', alignItems:'center', width:'100%', justifyContent:'space-between'}}><Heading size={600} marginTop={16} marginLeft={8} marginBottom={16}>{orgs.current.name}</Heading><IconButton icon={ChevronLeftIcon} appearance=\"minimal\" height={48}/></div>\n      <div style={{marginLeft:'8px', borderBottom:'1px solid #E4E7EB',width:'85%',height:'1px',boxSizing:'border-box'}}/>\n      <Heading size={500} marginTop={8} marginLeft={8} marginBottom={8}>Projects</Heading>\n      <Pane\n        width={\"100%\"}>\n        <Menu>\n          <Menu.OptionsGroup\n            options={projects.all.map((p) => {return({label:p.name, value:p.key})})}\n            selected={projects.current.key}\n            // onChange={sel => setProjs({...projects, current:projects.all.find(p => p.key === sel)})}\n            onChange={sel => console.log(sel)}\n            >\n          </Menu.OptionsGroup>\n          <Menu.Divider />\n          <Menu.Group>\n            <Menu.Item icon={AddIcon} intent=\"primary\">Add Project</Menu.Item>\n          </Menu.Group>\n        </Menu>\n      </Pane>\n    </Pane>\n  );\n}\n\nexport default Drawer;","import React, { useEffect, useMemo } from 'react';\n\nimport {Button, Heading} from 'evergreen-ui'\n// Change projects, also views for current project\nfunction AppBar() {\n  \n  return (\n    <div style={{width:'100%', \n                 height:'48px', \n                 left:'0px', \n                 top:'0px', \n                 padding:'1%',\n                 boxSizing:'border-box',\n                 display:'flex',\n                 backgroundColor:'#2979FF',\n                 boxShadow:\"0px 2px 3px 0px rgba(0,0,0,0.35)\",\n                 zIndex:'1000',\n                 display:'flex',\n                 alignItems:'center',\n                 justifyContent:'space-between'\n                 }}>\n        <Heading size={700} color='white'>matte.</Heading>\n        <div style={{display:'flex'}}>\n          <Button appearance=\"minimal\" height={40} style={{color:'white'}}>Search</Button>\n          <Button appearance=\"minimal\" height={40} style={{color:'white'}}>Organize</Button>\n          <Button appearance=\"minimal\" height={40} style={{color:'white'}}>Discover</Button>\n        </div>\n    </div>\n  );\n}\n\nexport default AppBar;","import React, {useState} from 'react'\nimport './App.css'\n\nimport create from 'zustand'\n\nimport DataTable from './Components/Table/DataTable'\nimport Drawer from './Components/Drawer/Drawer'\nimport AppBar from './Components/AppBar/AppBar'\nimport {ThemeProvider} from 'styled-components'\n\nconst theme = {\n    text: '#001720',\n    contrastText: '#F8F9F9',\n\n    primary: '#f44336',\n    primaryLite: '#f6685e',\n\n    secondary: '#2979FF',\n    secondaryLite: '#5393ff',\n\n    ok: '#00A584',\n    warning: '#FEDF00',\n    alert: '#E91D27',\n\n    grey: '#CED3DF',\n  }\n  \n\nfunction App() {\n  const [orgs, setOrgs] = useState({\n    current:{\n        name:'OMA',\n        key:'oma-1234'\n      },\n    all: [{\n        name:'WSP',\n        key:'wsp-1234'\n      }, {\n        name:'KPF',\n        key:'kpf-1234'\n      }, {\n        name:'BIG',\n        key:'big-1234'\n      }]\n  })\n\n  const [projects, setProjs] = useState({\n    current:{name:'table2', key:'table2'},\n    all: [{name:'table1', key:'table1'}, \n          {name:'table2', key:'table2'}, \n          {name:'table3', key:'table3'}]\n  })\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n      <AppBar/>\n      <div style={{display:'flex', flexDirection:'row', height:'calc(100% - 48px)'}}>\n        <Drawer width='15%' orgs={orgs} projects={projects} setProjs={setProjs}/>\n        <DataTable width='85%' project={projects.current} org={orgs.current}/>\n      </div>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}